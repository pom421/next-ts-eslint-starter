name: Continuous integration

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  # As its name stands for, this jobs will install the npm dependencies and cache them
  # unless they have been cached in a previous workflow run and remained unchanged.
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        # Check for `cache-hit` (`steps.cache-dependencies.cache-hit != 'true'`)
        # If there's a cache hit, we skip this step (the dependencies are already available)
        # If there's no cache hit, we run "yarn install"
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile --force --non-interactive

  check-all:
    runs-on: ubuntu-latest
    needs: install-cache

    steps:
      - name: Checkout Commit
        uses: actions/checkout@v2

      # Here we use actions/cache again but this time only to restore the dependencies
      # At this stage of the workflow we're sure that the dependencies have been installed and cached
      # either on this same run, or on a previous CI run. Thus we can skip trying to run "yarn install".
      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check types
        run: |
          yarn check-all

  build:
    runs-on: ubuntu-latest
    needs: [check-all]

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Restore yarn dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Build app
        run: CI=false yarn build
